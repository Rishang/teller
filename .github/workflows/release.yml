name: Release
on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

env:
  BIN_NAME: teller
  PROJECT_NAME: teller
  REPO_NAME: tellerops/teller

jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        target:
          - aarch64-unknown-linux-gnu
          # Add other targets if needed

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install Cross
        run: cargo install cross

      - name: Set up cross-compilation dependencies
        run: |
          sudo dpkg --add-architecture arm64
          sudo apt-get update
          sudo apt-get install -y \
            gcc-aarch64-linux-gnu \
            libssl-dev:arm64 \
            pkg-config \
            protobuf-compiler

      - name: Set OpenSSL environment variables
        run: |
          echo "AARCH64_UNKNOWN_LINUX_GNU_OPENSSL_DIR=/usr/aarch64-linux-gnu" >> $GITHUB_ENV
          echo "AARCH64_UNKNOWN_LINUX_GNU_OPENSSL_LIB_DIR=/usr/aarch64-linux-gnu/lib" >> $GITHUB_ENV
          echo "AARCH64_UNKNOWN_LINUX_GNU_OPENSSL_INCLUDE_DIR=/usr/aarch64-linux-gnu/include" >> $GITHUB_ENV

      - name: Build release binary with Cross
        run: cross build --release --target ${{ matrix.target }}

      - name: Strip release binary
        run: |
          aarch64-linux-gnu-strip target/${{ matrix.target }}/release/$BIN_NAME

      - name: Archive the build
        run: |
          mkdir -p dist
          cp target/${{ matrix.target }}/release/$BIN_NAME dist/
          tar czvf dist/${{ BIN_NAME }}-${{ matrix.target }}.tar.gz -C dist $BIN_NAME

      - uses: actions/upload-artifact@v4
        with:
          name: bins-${{ matrix.target }}
          path: dist

  publish:
    name: Publish
    needs: [build]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: bins-*
          path: dist

      - name: Set tag name
        run: |
          if [[ "${GITHUB_REF}" == "refs/tags/"* ]]; then
            TAG="${GITHUB_REF#refs/tags/}"
          else
            TAG="${GITHUB_SHA}"
          fi
          echo "TAG=${TAG}" >> $GITHUB_ENV

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/*
          file_glob: true
          tag: ${{ env.TAG }}
          overwrite: true
